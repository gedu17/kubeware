apiVersion: apps/v1
kind: Deployment
metadata:
  name: podinfo
  labels:
    app: podinfo
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: podinfo
  template:
    metadata:
      labels:
        app: podinfo
    spec:
      volumes:
        - name: podinfo-http
          configMap:
            name: kubeware
            items:
              - key: config_podinfo_http.toml
                path: config.toml
        - name: podinfo-grpc
          configMap:
            name: kubeware
            items:
              - key: config_podinfo_grpc.toml
                path: config.toml
      terminationGracePeriodSeconds: 30
      containers:
        - name: podinfo
          image: "stefanprodan/podinfo:3.2.2"
          imagePullPolicy: IfNotPresent
          command:
            - ./podinfo
            - --port=9898
            - --grpc-port=9899
            - --grpc-service-name=podinfo
            - --level=info
          ports:
            - name: http
              containerPort: 9898
              protocol: TCP
            - name: grpc
              containerPort: 9899
              protocol: TCP
        - name: kubeware-http
          image: 'kubeware:0.1.0'
          ports:
            - containerPort: 81
              protocol: TCP
          env:
            - name: RUST_LOG
              value: DEBUG
          volumeMounts:
            - name: podinfo-http
              mountPath: /opt/kubeware
          imagePullPolicy: Never
        - name: kubeware-grpc
          image: 'kubeware:0.1.0'
          ports:
            - containerPort: 82
              protocol: TCP
          env:
            - name: RUST_LOG
              value: DEBUG
          volumeMounts:
            - name: podinfo-grpc
              mountPath: /opt/kubeware
          imagePullPolicy: Never

  ----

kind: ConfigMap
apiVersion: v1
metadata:
  name: kubeware
data:
  config.toml: |
    ip = "0.0.0.0"
    port = 81
    [backend]
    url = "http://127.0.0.1:80"
    [[services]]
    url = "http://127.0.0.1:17002"
    request = true
    response = true
  config_podinfo_http.toml: |
    ip = "0.0.0.0"
    port = 81
    [backend]
    url = "http://127.0.0.1:9898"
    [[services]]
    url = "http://127.0.0.1:17002"
    request = false
    response = false
  config_podinfo_grpc.toml: |
    ip = "0.0.0.0"
    port = 82
    [backend]
    url = "http://127.0.0.1:9899"
    [[services]]
    url = "http://127.0.0.1:17002"
    request = false
    response = false

  ----

kind: Service
apiVersion: v1
metadata:
  name: podinfo-http
  namespace: default
  labels:
    app: podinfo
spec:
  ports:
    - name: http
      protocol: TCP
      port: 8001
      targetPort: 81
  selector:
    app: podinfo
  type: NodePort

  ----

kind: Service
apiVersion: v1
metadata:
  name: podinfo-grpc
  namespace: default
  labels:
    app: podinfo
spec:
  ports:
    - name: grpc
      protocol: TCP
      port: 8002
      targetPort: 82
  selector:
    app: podinfo
  type: NodePort